# 项目分包情况
#### channel
* 通道模块,维护与用户的长连接, 解析字节流成为message. 可以注册消息接收观察者
#### chat
* 聊天模块,处理消息并转发
#### common
* 公共模块, 用于维护三方库的初始化与使用, 还有提供给其他业务模块使用的util, 统一常量.可以
* 注册用户上线通知;如果其他模块需要使用http服务,需要提前在该模块注册
#### data
* 数据层, 控制redis与mysql的数据. 其他模块如果想获取数据层的数据, 需要通过该模块来获取.
* *_service.go 为对应业务的整合, 主要形成 获取数据 -> redis缓存 -> mysql 关系链, 同步redis数据也属于该模块处理
##### sql
* 数据库模块, 用于处理对数据库的增删改查
* db_basic.go为对数据库的增删改查方法的封装
* *_db_service.go为对数据库各个表的增删改查
* proxy.go 为代理入口, 对单个行为的封装(涉及部分业务),限制其他模块只能访问该文件中的方法
#### user
* 用户模块, 用于处理跟用户相关的业务, 例如登陆注册, 好友相关的也放在了该模块
#### util
* 工具模块,没啥用, 职责被common模块侵占完了
#### group
* 群模块
#### business
* 可能会添加该层, 用于放置业务功能, 减少common包的职责(上线通知, 消息监听,离线通知等)


# 项目架构
  ![架构图](https://oxjd-static-file-dev.oss-cn-hangzhou.aliyuncs.com/web/wxapp/4AE383B0-6753-433A-AE21-CA52CE11611C.png)
  
